name: Update GitHub Pages

on:
  push:
    branches: ["master"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Prep docs
        run: |
          mkdir ./docs
          cp ./README.md ./docs/index.md
          echo 'title: node-mssql' > docs/_config.yml
          echo 'description: Microsoft SQL Server client for Node.js' >> docs/_config.yml
          echo 'google_analytics: UA-42442367-2' >> docs/_config.yml
          echo 'show_downloads: true' >> docs/_config.yml
          echo 'remote_theme: pages-themes/cayman@v0.2.0' >> docs/_config.yml
          echo '' >> docs/_config.yml
          echo 'plugins:' >> docs/_config.yml
          echo '  - jekyll-remote-theme' >> docs/_config.yml
          echo '  - jekyll-mentions' >> docs/_config.yml
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@44a6e6beabd48582f863aeeb6cb2151cc1716697 # v1.0.13
        with:
          source: ./docs
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
